import java.util.Scanner;
import java.util.concurrent.*;

public class QuizApplication {
    static class Question {
        String question;
        String[] options;
        int correctOption;

        Question(String question, String[] options, int correctOption) {
            this.question = question;
            this.options = options;
            this.correctOption = correctOption;
        }
    }

    public static void main(String[] args) {
        Question[] questions = {
            new Question("What is the capital of France?", new String[]{"1. Berlin", "2. Madrid", "3. Paris", "4. Rome"}, 3),
            new Question("Which planet is known as the Red Planet?", new String[]{"1. Earth", "2. Mars", "3. Jupiter", "4. Venus"}, 2),
            new Question("Who wrote 'To Kill a Mockingbird'?", new String[]{"1. Harper Lee", "2. J.K. Rowling", "3. George Orwell", "4. Jane Austen"}, 1)
        };

        Scanner scanner = new Scanner(System.in);
        int score = 0;

        for (Question q : questions) {
            System.out.println(q.question);
            for (String option : q.options) {
                System.out.println(option);
            }

            int answer = getAnswerWithTimeout(scanner, 10);
            if (answer == q.correctOption) {
                score++;
            }
        }

        System.out.println("Quiz Over! Your score: " + score + "/" + questions.length);
        scanner.close();
    }

    private static int getAnswerWithTimeout(Scanner scanner, int timeoutSeconds) {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<Integer> future = executor.submit(scanner::nextInt);

        try {
            return future.get(timeoutSeconds, TimeUnit.SECONDS);
        } catch (TimeoutException e) {
            System.out.println("Time's up!");
            return -1; // Invalid answer due to timeout
        } catch (Exception e) {
            return -1; // Invalid answer due to other exceptions
        } finally {
            executor.shutdownNow();
        }
    }
}
